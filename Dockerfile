# Instala git e clona projeto no ambiente da JDK.
FROM eclipse-temurin:17-jdk-jammy AS builder
WORKDIR /opt/app

# Copia o código-fonte para o contêiner
COPY . .

# Compila o projeto.
RUN bash ./mvnw dependency:go-offline
RUN bash ./mvnw clean install -DskipTests

# Inicia ambiente com JRE-17.
FROM eclipse-temurin:17-jre-jammy

# ARGs agrupados
ARG DB_PASSWORD
ARG DB_URL
ARG DB_USER
ARG EMAIL_HOST
ARG EMAIL_PASSWORD
ARG EMAIL_PORT
ARG EMAIL_USERNAME
ARG GEOLOCALIZACAO_SERVICE_KEY
ARG GEOLOCALIZACAO_SERVICE_URL
ARG LOKI
ARG MINIO_ACCESS_KEY
ARG MINIO_BUCKET_NAME
ARG MINIO_ENDPOINT
ARG MINIO_SECRET_KEY
ARG MONITOR_BLOCK_PRICE
ARG PAYMENT_GATEWAY_API_KEY
ARG PAYMENT_GATEWAY_WEBHOOK_SECRET
ARG TOKEN_SECRET
ARG FRONT_BASE_UR
ARG STRIPE_PRODUCT_ID
ARG RABBITMQ_HOST
ARG RABBITMQ_PORT
ARG RABBITMQ_USER
ARG RABBITMQ_PASSWORD
ARG QUEUE_NAME
ARG EXCHANGE_NAME
ARG ROUTING_KEY

# ENVs agrupados após os ARGs
ENV DB_PASSWORD=${DB_PASSWORD}
ENV DB_URL=${DB_URL}
ENV DB_USER=${DB_USER}
ENV EMAIL_HOST=${EMAIL_HOST}
ENV EMAIL_PASSWORD=${EMAIL_PASSWORD}
ENV EMAIL_PORT=${EMAIL_PORT}
ENV EMAIL_USERNAME=${EMAIL_USERNAME}
ENV GEOLOCALIZACAO_SERVICE_KEY=${GEOLOCALIZACAO_SERVICE_KEY}
ENV GEOLOCALIZACAO_SERVICE_URL=${GEOLOCALIZACAO_SERVICE_URL}
ENV LOKI=${LOKI}
ENV MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
ENV MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
ENV MINIO_ENDPOINT=${MINIO_ENDPOINT}
ENV MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
ENV MONITOR_BLOCK_PRICE=${MONITOR_BLOCK_PRICE}
ENV PAYMENT_GATEWAY_API_KEY=${PAYMENT_GATEWAY_API_KEY}
ENV PAYMENT_GATEWAY_WEBHOOK_SECRET=${PAYMENT_GATEWAY_WEBHOOK_SECRET}
ENV TOKEN_SECRET=${TOKEN_SECRET}
ENV FRONT_BASE_URL=${FRONT_BASE_URL}
ENV STRIPE_PRODUCT_ID=${STRIPE_PRODUCT_ID}
ENV RABBITMQ_HOST=${RABBITMQ_HOST}
ENV RABBITMQ_PORT=${RABBITMQ_PORT}
ENV RABBITMQ_USER=${RABBITMQ_USER}
ENV RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
ENV QUEUE_NAME=${QUEUE_NAME}
ENV EXCHANGE_NAME=${EXCHANGE_NAME}
ENV ROUTING_KEY=${ROUTING_KEY}
ENV TZ=America/New_York

WORKDIR /opt/app

# Copia projeto compilado pelo JDK para ambiente JRE.
COPY --from=builder /opt/app/target/*.jar ./app.jar

EXPOSE 8080
ENTRYPOINT ["java", "-jar", "./app.jar" ]