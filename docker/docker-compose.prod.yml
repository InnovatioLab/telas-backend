version: '3'

services:
  loki:
    container_name: loki_telas
    image: grafana/loki:2.9.0
    volumes:
      - loki_data:/loki
      - ./config/loki-config.yml:/etc/loki/loki-config.yml
    networks:
      - observability
    ports:
      - "3100:3100"
    restart: always
    healthcheck:
      test: wget --spider -q http://localhost:3100/ready || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  promtail:
    container_name: promtail_telas
    image: grafana/promtail:2.9.0
    volumes:
      - /var/log:/var/log
      - ./config/promtail-config.yml:/etc/promtail/promtail-config.yml
    networks:
      - observability
    restart: always
    command: -config.file=/etc/promtail/promtail-config.yml
    healthcheck:
      test: wget --spider -q http://localhost:9080/ready || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  prometheus:
    container_name: prometheus_telas
    image: prom/prometheus:latest
    labels:
      application: "Prometheus"
    volumes:
      - ./config/prometheus-config.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - observability
    ports:
      - "9090:9090"
    restart: always
    healthcheck:
      test: wget --spider -q http://localhost:9090/-/ready || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  grafana:
    container_name: grafana_telas
    image: grafana/grafana:latest
    labels:
      application: "Grafana"
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - observability
    restart: always
    healthcheck:
      test: curl --fail http://localhost:3000/api/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    container_name: rabbitmq_telas
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - observability
    restart: always

networks:
  observability:
    driver: bridge

volumes:
  loki_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local