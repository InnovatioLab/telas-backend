# =============================================================
#   Application Properties
# =============================================================
spring.application.name=Telas
front.base.url=${FRONT_BASE_URL:http://localhost:4200}
# ==============================================================
# = Server Properties
# ==============================================================
server.port=8080
server.servlet.context-path=/api
server.error.include-message=always
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
# =============================================================
#   Database (JPA, Flyway)
# =============================================================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
# =============================================================
#   JPA
# =============================================================
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.generate-ddl=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.default_schema=public
# =============================================================
#   Envers
# =============================================================
spring.jpa.properties.org.hibernate.envers.revision_field_name=audit_id
spring.jpa.properties.org.hibernate.envers.revision_type_field_name=audit_type
spring.jpa.properties.org.hibernate.envers.store_data_at_delete=true
# =============================================================
#   Flyway 
# =============================================================
spring.flyway.url=${DB_URL}
spring.flyway.user=${DB_USER}
spring.flyway.password=${DB_PASSWORD}
spring.flyway.enabled=true
spring.flyway.schemas=public
spring.flyway.create-schemas=true
spring.flyway.locations=classpath:db/migration
# =============================================================
#   File Upload Configuration
# =============================================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=55MB
# =============================================================
#   Email Configuration
# =============================================================
spring.mail.host=${EMAIL_HOST}
spring.mail.port=${EMAIL_PORT}
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# =============================================================
#   Storage (MinIO) Config
# =============================================================
minio.endpoint=${MINIO_ENDPOINT}
minio.bucket.name=${MINIO_BUCKET_NAME}
minio.access.key=${MINIO_ACCESS_KEY}
minio.secret.key=${MINIO_SECRET_KEY}
# ==============================================================
#   Swagger properties
# ==============================================================
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.path=/docs
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
swagger.server.url=https://localhost:8080/api
# ==============================================================
#   Actuator properties
# =============================================================
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=env,beans
management.endpoint.health.probes.enabled=
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true
management.health.readinessstate.enabled=true
management.health.livenessstate.enabled=true
# =============================================================
# LOKI
# =============================================================
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.logback.appender.loki.url=${LOKI}
logging.logback.appender.loki.labels=app=spring-boot-app,env=dev
logging.logback.appender.loki.pattern={"timestamp": "%date{ISO8601}", "level": "%level", "message": "%message", "logger": "%logger", "thread": "%thread", "mdc": "%mdc"}
logging.logback.appender.loki.batch-size=1000
logging.logback.appender.loki.max-queue-size=10000
logging.logback.appender.loki.timeout=30
logging.config=classpath:logback-spring.xml
# ==============================================================
#   Geolocalizacao Service
# =============================================================
geolocalizacao.service.url=${GEOLOCALIZACAO_SERVICE_URL}
geolocalizacao.service.key=${GEOLOCALIZACAO_SERVICE_KEY}
# ==============================================================
#   Token
# =============================================================
api.security.token.secret=${TOKEN_SECRET}
# =============================================================
#   PAYMENT
# =============================================================
#payment.gateway.url=${PAYMENT_GATEWAY_URL}
payment.gateway.key=${PAYMENT_GATEWAY_API_KEY}
payment.gateway.webhook.secret=${PAYMENT_GATEWAY_WEBHOOK_SECRET}
stripe.product.id=${STRIPE_PRODUCT_ID:prod_Stkr3zWGQVdvb4}
# =============================================================
#   QUEUE
# =============================================================
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USER:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}
spring.rabbitmq.connection-timeout=10s
spring.rabbitmq.listener.simple.acknowledge-mode=${RABBITMQ_ACKNOWLEDGE_MODE:auto}
queue.name=${QUEUE_NAME:stripe.webhook.queue}
exchange.name=${EXCHANGE_NAME:stripe.webhook.exchange}
routing.key=${ROUTING_KEY:stripe.webhook.routing.key}
